-- local M = {}
--
-- local artisan = function(...)
--   return vim.system({ "php", "artisan", ... }, { text = true }):wait()
-- end
--
-- local prompted = function(prompt)
--   return function()
--     local name = vim.fn.input(prompt)
--     if not name or name == "" then
--       vim.notify "#cancelled"
--       return
--     end
--     local job = artisan("make:livewire", name)
--     vim.notify(job.stdout)
--   end
-- end
--
-- local actions = {
--   -- ["serve"] = function() end,
--
--   ["livewire make (make:livewire)"] = prompted "livewire component: ",
--   ["migrate fresh (migrate:fresh)"] = function()
--     local confirm = vim.fn.input "Are you sure? "
--     if not confirm or confirm == "" then
--       vim.notify "Did not reset database :)"
--       return
--     end
--
--     vim.notify(artisan("migrate:fresh").stdout)
--   end,
--
--   ["migrate fresh --seed (migrate:fresh)"] = function()
--     local confirm = vim.fn.input "Are you sure? "
--     if not confirm or confirm == "" then
--       vim.notify "Did not reset database :)"
--       return
--     end
--
--     vim.notify(artisan("migrate:fresh", "--seed").stdout)
--   end,
-- }
--
-- M.artisan = function()
--   local keys = vim.tbl_keys(actions)
--   table.sort(keys)
--
--   vim.ui.select(keys, {
--     prompt = "PHP",
--     format_item = function(item)
--       return item
--     end,
--   }, function(choice)
--     if not choice then
--       return
--     end
--
--     local result = actions[choice]
--     if result then
--       pcall(result)
--     else
--       vim.notify "weird..."
--     end
--   end)
-- end
--
-- return M
